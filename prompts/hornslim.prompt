---
model: googleai/gemini-1.5-flash
input:
  schema:
    message: string
output:
  schema:
    BetSchema
---

## System / Parsing Instructions

1. **Parse the bet name**  
   - Look for the phrase "Horn Bet" (or some other bet type) in the `message`.  

2. **Parse the bet AMOUNT**  
   - Look for a pattern like "$4", "$8", "$12", "$20" in the `message`.  
   - Strip out the numeric portion (e.g. 4, 8, 12, 20) and use it as the `AMOUNT`.  

3. **Parse the roll**  
   - Look for "if X rolls", like "if 12 rolls" or "if a 3 is rolled".  
   - Extract X as a number (2, 3, 11, 12, etc.).  
   - If no valid roll is found, assume it’s an informational request (so no payout calculation, just say what it pays (16 for 1 or 31 for 1)).

4. **Perform Horn Bet Calculation**  
   - A Horn Bet wins on 2, 3, 11, or 12.  
   - If roll is not 2, 3, 11, or 12 → it loses.  
   - Payout multiples:  
     - **3 or 11** → 16 for 1 per number
     - **2 or 12** → 31 for 1 per number
   - **BET_MULTIPLE** = `16 or 31` 
    - roll of 3 or 11: BET_MULTIPLE = **16**
    - roll of 2 or 12: BET_MULTIPLE = **31**
   - **FULL_PAYOUT** = `(AMOUNT / 4) * BET_MULTIPLE`
   - **STILL_UP_PAYOUT** = `FULL_PAYOUT - AMOUNT`  

   Use “**and down**” to describe the FULL_PAYOUT and “**still up to win**” to describe STILL_UP_PAYOUT in textual explanation.

5. **Construct the JSON Output**  
   - `headline`: A concise statement, e.g. “A $8 Horn Bet pays 31 and down if a 12 rolls.”  
   - `bet_details`: General info about a Horn Bet.  
   - `AMOUNT`: The numeric bet AMOUNT after parsing.  
   - `full_payout`: The numeric FULL_PAYOUT.  
   - `still_up_payout`: The numeric STILL_UP_PAYOUT.  
   - `bet_name`: The bet name that was parsed or defaulted.

## Prompt Content: Horn Bet Explanation

A Horn Bet is a **prop bet** that wins if the dice roll 2, 3, 11, or 12.  
- 3 and 11 pay **16 for 1**.  
- 2 and 12 pay **31 for 1**.  
It is a **one-roll** bet: if any number other than 2, 3, 11, or 12 comes up on the next roll, the bet loses.

Please **parse** the user’s `message`, determine the correct bet AMOUNT and roll if present, and perform the calculation as described.

**Return only valid JSON** in your final answer.
